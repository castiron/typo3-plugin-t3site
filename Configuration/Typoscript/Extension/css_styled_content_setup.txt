############
# TT_CONTENT MODIFICATIONS
############
tt_content.stdWrap.innerWrap.cObject.default {
	10.cObject {
		default >
		default = TEXT
		default.value = <div id="c{field:uid}" class="csc-typography"
		# CTypes below will have no <div id="c##"... applied
		# Make sure you remove the closing tag and extra class as well, at keys 20 and 30 of this TSobj
		bare = TEXT
		bare.value =
		t3site_interior_hero < .bare
		t3site_slider_resources < .bare
		gridelements_pi1 < .bare
		t3site_slider_grantees < .bare
		html < .bare
		fluidhtml_pi1 < .bare
		formhandler_pi1 < .bare
		emcfgrantees_landing < .bare
		emcfgrantees_grantee_performance < .bare
		emcfcampaigns_list < .bare
		shortcut < .bare
	}
	20 {
		# Remove the csc-default class
		10 >
	}
	30.cObject {
		# CTypes below will have no </div> to match the div inserted at key 10 of this TSobj
		bare = TEXT
		bare.value =
		t3site_interior_hero < .bare
		t3site_slider_resources < .bare
		gridelements_pi1 < .bare
		t3site_slider_grantees < .bare
		html < .bare
		fluidhtml_pi1 < .bare
		formhandler_pi1 < .bare
		emcfgrantees_landing < .bare
		emcfgrantees_grantee_performance < .bare
		emcfcampaigns_list < .bare
		shortcut < .bare
	}

}

# Remove wraps completely for the plugins in this list
tt_content.stdWrap.innerWrap.if {
	isInList.field = list_type
	value = cicslide_slide,news_pi1,emcfsearch_search,emcfnews_indexednewsasync,formhandler_pi1,tscobj_pi1
	negate = 1
}

tt_content.table.20 {
	tableParams_0 {
		cellpadding = 0
		cellspacing = 0
	}
	tableParams_1 < .tableParams_0
	tableParams_2 < .tableParams_0
	tableParams_3 < .tableParams_0
	tableParams_4 < .tableParams_0
}

# Custom Classes on headers!
# Depends on tx_headerstyles extension
tmp.headerClass < lib.stdheader.3.headerClass

lib.tx_headerStyles = COA
lib.tx_headerStyles {
	10 = TEXT
	10.value < tmp.headerClass
	10.noTrimWrap = | class="| tx-t3site-header-style-{field:tx_t3site_header_styles}"|
	10.noTrimWrap.insertData = 1
	10.if {
		value = 1
		equals.data = cObj:parentRecordNumber
	}

	20 = TEXT
	20.value =
	20.noTrimWrap = | class="|tx-t3site-header-style-{field:tx_t3site_header_styles}"|
	20.noTrimWrap.insertData = 1
	20.if {
		value = 1
		equals.data = cObj:parentRecordNumber
		negate = 1
	}
}

lib.stdheader.3 = LOAD_REGISTER
lib.stdheader.3 {
	headerClass >
	headerClass.append < lib.tx_headerStyles
}


# End Custom Classes on headers!


tt_content.textpic {
	stdWrap {
		wrap = |<div class="clear"></div>
		required = 1
	}
}

tt_content.menu.20 {
	# "Sitemap - liststyle"
	2 >
	2 = HMENU
	2 {
		wrap = <div class="csc-sitemap">|</div>
		1 = TMENU
		1 {
			expAll = 1
			wrap = <ul class="level-1">|</ul>
			NO {
				stdWrap.htmlSpecialChars = 1
				wrapItemAndSub = <li>|</li>
				ATagTitle.field = description // title
			}
		}
		2 < .1
		2 {
			wrap = <ul class="level-2">|</ul>
		}
		3 <. 1
		3 {
			wrap = <ul class="level-3">|</ul>
		}
		4 <. 1
		4 {
			wrap = <ul class="level-4">|</ul>
		}
		5 <. 1
		5 {
			wrap = <ul class="level-5">|</ul>
		}
		6 <. 1
		6 {
			wrap = <ul class="level-6">|</ul>
		}
		7 <. 1
		7 {
			wrap = <ul class="level-7">|</ul>
		}
	}
}

# Make sure tables have 0 cellpadding and cellspacing by default (RTE allow modification of this)
lib.parseFunc_RTE {
	externalBlocks = blockquote, table
	externalBlocks {
		# Prevents margin-top & -bottom from being set inline on <blockquote>s
		blockquote {
			callRecursive {
				tagStdWrap {
					HTMLparser {
						tags {
							blockquote {
								overrideAttribs =
							}
						}
					}
				}
			}
		}
		table {
			stdWrap.HTMLparser.tags.table {
				# overrideAttribs = cellpadding="0" cellspacing="0"
				fixAttrib {
					class {
						always = 0
						list >
					}
					cellpadding {
						default = 0
					}
					cellspacing {
						default = 0
					}
				}
			}
		}
	}
}

# get rid of .csc-firstHeader, etc.
lib.stdheader = COA
lib.stdheader {
	3.headerClass.cObject >
}

# Disable the default header output for plugin types where we want to control header field output
tt_content.list.10 >
tt_content.list.10 = CASE
tt_content.list.10 {
	key.field = list_type
	default = < lib.stdheader
	# empty text objects for headers on plugins where we want finer control
	news_pi1 = TEXT
}

tt_content.image.20 {
	maxWTemp = CASE
	maxWTemp {
		key.field = section_frame
		100 = TEXT
		100.value = 395c
		default = TEXT
		default.value = {$styles.content.imgtext.maxWInText}
	}

	maxHTemp = CASE
	maxHTemp {
		key.field = section_frame
		100 = TEXT
		100.value = 230c
		default = TEXT
		default.value = {$styles.content.imgtext.maxHInText}
	}

	# Add an option to the Indentation and Frames menu to size an image to the same size
	# as all other images with this frame (230px by 395px)
	maxWInText >
	maxWInText.cObject < .maxWTemp

	maxHInText >
	maxHInText.cObject < .maxHTemp

	maxW >
	maxW.cObject < .maxWTemp
	maxW.cObject.default.value = {$styles.content.imgtext.maxW}

	maxH >
	maxH.cObject < .maxHTemp
	maxH.cObject.default.value = {$styles.content.imgtext.maxH}
}
